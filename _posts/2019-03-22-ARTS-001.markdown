---
layout: post
title:  "ARTS-1"
date:   2019-03-24 21:11:00 +0800
categories: ARTS
---
报名参加了耗子叔的ARTS，万万没想到，第一周就拖到了周日晚上😔。借口什么的就省了吧，无论怎样先把卡打上吧，即使内容敷衍，也要有个坚持吗。。�
除了ARTS之外，再加一项，锻炼英文写作。。💪💪💪
## So,what's ARTS？
* Algorithm
* Review
* Tip
* Share

* ### Algorithm
    * [leetcode-text-justification](https://leetcode.com/submissions/detail/217223473/)
    * thought 
        * fill first line
        * fill the next part
        * the last line and the others use different strategies to fill the blank
    * code
    
    ```
    public List<String> fullJustify(String[] words, int maxWidth) {
        return firstJustify(words, new ArrayList<>(), maxWidth, 0);
    }

    private List<String> firstJustify(String[] words, List<String> resData, int maxWidth, int startIdx) {
        String res = null;
        List<String> item = new ArrayList<>();
        for (; startIdx < words.length;) {
            item.add(words[startIdx++]);
            if (startIdx >= words.length) {
                res = fillSpaceForLast(item, maxWidth);
                break;
            } else if (calculateTotalSize(item, words[startIdx]) > maxWidth) {
                res = fillSpaceForLeft(item, maxWidth);
                break;
            }
        }
        if (res != null) {
            resData.add(res);
            firstJustify(words, resData, maxWidth, startIdx);
        }
        return resData;
    }

    private String fillSpaceForLast(List<String> item, int maxWidth) {
        StringBuilder res = new StringBuilder();
        int wordSize = calculateWordsSize(item);
        for (int i = 0; i < item.size(); i++) {
            res.append(item.get(i));
            if (i != item.size() - 1) {
                res.append(spaceStr(1));
            } else {
                res.append(spaceStr(maxWidth - wordSize - item.size() + 1));
            }
        }
        return res.toString();
    }

    private String fillSpaceForLeft(List<String> item, int maxWidth) {
        StringBuilder res = new StringBuilder();
        int wordSize = calculateWordsSize(item);
        int baseSpaceCount;
        int moreSpaceCount;
        if (item.size() == 1) {
            baseSpaceCount = maxWidth - wordSize;
            moreSpaceCount = 0;
        } else {
            baseSpaceCount = (maxWidth - wordSize) / (item.size() - 1);
            moreSpaceCount = (maxWidth - wordSize) % (item.size() - 1);
        }
        for (int i = 0; i < item.size(); i++) {
            res.append(item.get(i));
            if (i != item.size() - 1 || item.size() == 1) {
                res.append(spaceStr(baseSpaceCount)).append(spaceStr(moreSpaceCount-- > 0 ? 1 : 0));
            }
        }
        return res.toString();
    }

    private StringBuilder spaceStr(int spaceCount) {
        StringBuilder res = new StringBuilder();
        for (int i = 0; i < spaceCount; i++) {
            res.append(" ");
        }
        return res;
    }

    private int calculateWordsSize(List<String> item) {
        int res = 0;
        for (String i : item) res += i.length();
        return res;
    }

    private int calculateTotalSize(List<String> item, String word) {
        int res = 0;
        for (String i : item)  res += i.length() + 1;
        res += word.length();
        return res;
    }   
    
    ``` 
* ### Review
    * [bitcoin](https://bitcoin.org/bitcoin.pdf)
* ### Tip
    * use GitHub Pages to build a personal site: [jekyll](https://help.github.com/en/articles/setting-up-your-github-pages-site-locally-with-jekyll)
    * mark down demo & tool: [mdeditor](https://www.zybuluo.com/mdeditor)
* ### Share
    * [block chain primer](http://www.ruanyifeng.com/blog/2017/12/blockchain-tutorial.html) 
